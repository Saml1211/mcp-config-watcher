{
  "sleep": "Pauses execution for a specified number of milliseconds, useful for implementing delays in automated workflows.",
  "download_youtube_url": "Downloads YouTube subtitles from a URL, enabling Claude to read and analyze YouTube video content.",
  "get_scene_info": "Retrieves detailed information about the current Blender scene.",
  "get_object_info": "Gets detailed information about a specific object in the Blender scene.",
  "create_object": "Creates a new object in the Blender scene with customizable properties.",
  "modify_object": "Modifies an existing object in the Blender scene, changing properties like location, rotation, or scale.",
  "delete_object": "Deletes an object from the Blender scene.",
  "set_material": "Sets or creates a material for an object with customizable properties.",
  "execute_blender_code": "Executes arbitrary Python code in Blender for advanced operations.",
  "get_polyhaven_categories": "Gets a list of categories for assets on Polyhaven by type.",
  "search_polyhaven_assets": "Searches for assets on Polyhaven with optional filtering.",
  "download_polyhaven_asset": "Downloads and imports a Polyhaven asset into Blender.",
  "set_texture": "Applies a previously downloaded Polyhaven texture to an object.",
  "get_polyhaven_status": "Checks if PolyHaven integration is enabled in Blender.",
  "playwright_navigate": "Navigates to a specified URL in a browser instance.",
  "playwright_screenshot": "Takes a screenshot of the current page or a specific element.",
  "playwright_click": "Clicks an element on the page using a CSS selector.",
  "playwright_iframe_click": "Clicks an element within an iframe on the page.",
  "playwright_fill": "Fills out an input field with specified text.",
  "playwright_select": "Selects an option from a dropdown menu.",
  "playwright_hover": "Hovers over an element on the page.",
  "playwright_evaluate": "Executes JavaScript code in the browser console.",
  "playwright_console_logs": "Retrieves console logs from the browser with filtering options.",
  "playwright_close": "Closes the browser and releases resources.",
  "playwright_get": "Performs an HTTP GET request.",
  "playwright_post": "Performs an HTTP POST request with data.",
  "playwright_put": "Performs an HTTP PUT request with data.",
  "playwright_patch": "Performs an HTTP PATCH request with data.",
  "playwright_delete": "Performs an HTTP DELETE request.",
  "start_planning": "Initiates a new planning session with a software development goal.",
  "save_plan": "Saves the current implementation plan.",
  "add_todo": "Adds a new todo item to the current plan with details.",
  "remove_todo": "Removes a todo item from the current plan.",
  "get_todos": "Retrieves all todos in the current plan.",
  "update_todo_status": "Updates the completion status of a todo item.",
  "chat_perplexity": "Maintains ongoing conversations with Perplexity AI with full history context.",
  "search": "Performs a general search query to get comprehensive information on any topic.",
  "get_documentation": "Gets documentation and usage examples for a specific technology, library, or API.",
  "find_apis": "Finds and evaluates APIs that could be integrated into a project.",
  "check_deprecated_code": "Checks if code or dependencies might be using deprecated features.",
  "21st_magic_component_builder": "Generates UI component code based on user requests for React applications.",
  "logo_search": "Searches for and returns logos in specified formats (JSX, TSX, SVG).",
  "21st_magic_component_inspiration": "Fetches component data and previews from 21st.dev to inspire UI development.",
  "puppeteer_navigate": "Navigates to a URL in a headless browser.",
  "puppeteer_screenshot": "Takes a screenshot of the current page or a specific element.",
  "puppeteer_click": "Clicks an element on the page using a CSS selector.",
  "puppeteer_fill": "Fills out an input field with specified text.",
  "puppeteer_select": "Selects an option from a dropdown menu.",
  "puppeteer_hover": "Hovers over an element on the page.",
  "puppeteer_evaluate": "Executes JavaScript in the browser console.",
  "request_planning": "Registers a new user request and plans its associated tasks.",
  "get_next_task": "Retrieves the next pending task for a given request.",
  "mark_task_done": "Marks a task as completed.",
  "approve_task_completion": "Approves that a task is genuinely completed.",
  "approve_request_completion": "Finalizes an entire request after all tasks are done.",
  "open_task_details": "Gets details of a specific task by ID.",
  "list_requests": "Lists all requests with their basic information.",
  "add_tasks_to_request": "Adds new tasks to an existing request.",
  "update_task": "Updates an existing task's title and/or description.",
  "delete_task": "Deletes a specific task from a request.",
  "create_or_update_file": "Creates or updates a file in a GitHub repository.",
  "search_repositories": "Searches for GitHub repositories using the GitHub search syntax.",
  "create_repository": "Creates a new GitHub repository in your account.",
  "get_file_contents": "Gets the contents of a file or directory from a GitHub repository.",
  "push_files": "Pushes multiple files to a GitHub repository in a single commit.",
  "create_issue": "Creates a new issue in a GitHub repository.",
  "create_pull_request": "Creates a new pull request in a GitHub repository.",
  "fork_repository": "Forks a GitHub repository to your account or specified organization.",
  "create_branch": "Creates a new branch in a GitHub repository.",
  "list_commits": "Gets a list of commits from a branch in a GitHub repository.",
  "list_issues": "Lists issues in a GitHub repository with filtering options.",
  "update_issue": "Updates an existing issue in a GitHub repository.",
  "add_issue_comment": "Adds a comment to an existing issue.",
  "search_code": "Searches for code across GitHub repositories.",
  "search_issues": "Searches for issues and pull requests across GitHub repositories.",
  "search_users": "Searches for users on GitHub.",
  "get_issue": "Gets details of a specific issue in a GitHub repository.",
  "maps_geocode": "Converts an address into geographic coordinates.",
  "maps_reverse_geocode": "Converts coordinates into an address.",
  "maps_search_places": "Searches for places using Google Places API.",
  "maps_place_details": "Gets detailed information about a specific place.",
  "maps_distance_matrix": "Calculates travel distance and time for multiple origins and destinations.",
  "maps_elevation": "Gets elevation data for locations on the earth.",
  "maps_directions": "Gets directions between two points.",
  "tavily-search": "Provides comprehensive, real-time web search results using Tavily's AI search engine.",
  "tavily-extract": "Retrieves and processes raw content from specified URLs for data collection and analysis.",
  "sequentialthinking": "Facilitates detailed, reflective problem-solving through a structured thinking process that evolves as understanding deepens.",
  "brave_web_search": "Performs web searches using the Brave Search API, ideal for general queries and content discovery.",
  "brave_local_search": "Searches for local businesses and places with detailed information including addresses, ratings, and hours.",
  "read_file": "Reads the complete contents of a file with various text encoding support.",
  "read_multiple_files": "Reads multiple files simultaneously for efficient analysis.",
  "write_file": "Creates or overwrites a file with new content.",
  "edit_file": "Makes line-based edits to a text file with a git-style diff output.",
  "create_directory": "Creates a new directory or ensures a directory exists.",
  "list_directory": "Gets a detailed listing of all files and directories in a path.",
  "directory_tree": "Gets a recursive tree view of files and directories as a JSON structure.",
  "move_file": "Moves or renames files and directories.",
  "search_files": "Recursively searches for files matching a pattern.",
  "get_file_info": "Retrieves detailed metadata about a file or directory.",
  "list_allowed_directories": "Returns the list of directories accessible to the server.",
  "fetch_html": "Fetches a website and returns the content as HTML.",
  "fetch_markdown": "Fetches a website and returns the content as Markdown.",
  "fetch_txt": "Fetches a website and returns the content as plain text.",
  "fetch_json": "Fetches a JSON file from a URL.",
  "notion_append_block_children": "Appends new children blocks to a specified parent block in Notion.",
  "notion_retrieve_block": "Retrieves a block from Notion.",
  "notion_retrieve_block_children": "Retrieves the children of a block.",
  "notion_delete_block": "Deletes a block in Notion.",
  "notion_retrieve_page": "Retrieves a page from Notion.",
  "notion_update_page_properties": "Updates properties of a page or database item.",
  "notion_list_all_users": "Lists all users in the Notion workspace.",
  "notion_retrieve_user": "Retrieves a specific user by ID.",
  "notion_retrieve_bot_user": "Retrieves the bot user associated with the current token.",
  "notion_create_database": "Creates a database in Notion.",
  "notion_query_database": "Queries a database in Notion.",
  "notion_retrieve_database": "Retrieves a database in Notion.",
  "notion_update_database": "Updates a database in Notion.",
  "notion_create_database_item": "Creates a new item in a Notion database.",
  "notion_create_comment": "Creates a comment in Notion.",
  "notion_retrieve_comments": "Retrieves comments from a Notion page or block.",
  "notion_search": "Searches pages or databases by title in Notion.",
  "get_current_time": "Retrieves the current date and time.",
  "format_time": "Formats a timestamp according to the specified format.",
  "convert_timezone": "Converts time between different timezones.",
  "get_unix_timestamp": "Gets the current Unix timestamp (seconds since epoch).",
  "getConsoleLogs": "Retrieves all browser console logs from the current session.",
  "getConsoleErrors": "Retrieves only error messages from the browser console.",
  "getNetworkErrors": "Retrieves network error logs from the browser.",
  "getNetworkLogs": "Retrieves all network request logs from the browser.",
  "takeScreenshot": "Takes a screenshot of the current browser tab.",
  "getSelectedElement": "Retrieves information about the currently selected element in the DOM.",
  "wipeLogs": "Clears all browser logs from memory.",
  "runAccessibilityAudit": "Performs an accessibility audit on the current page.",
  "runPerformanceAudit": "Performs a performance audit on the current page.",
  "runSEOAudit": "Performs an SEO audit on the current page.",
  "runNextJSAudit": "Performs a Next.js-specific audit on the current page.",
  "runDebuggerMode": "Activates debugging mode to troubleshoot application issues.",
  "runAuditMode": "Runs comprehensive audits for SEO, accessibility and performance.",
  "runBestPracticesAudit": "Performs a best practices audit on the current page.",
  "search_google": "Search Google for a query",
  "visit_page": "Visit a webpage and extract its content",
  "take_screenshot": "Take a screenshot of the current page"
}
